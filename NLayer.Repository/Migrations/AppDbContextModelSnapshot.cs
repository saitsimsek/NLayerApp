// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayer.Repository;

#nullable disable

namespace NLayer.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NLayer.Core.Models.ApprovalStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ApprovalStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Projet Approval Description",
                            Name = "Projet Approval 1",
                            State = true
                        },
                        new
                        {
                            Id = 2,
                            Description = "Projet Approval Description",
                            Name = "Projet Approval 2",
                            State = true
                        },
                        new
                        {
                            Id = 3,
                            Description = "Projet Approval Description",
                            Name = "Projet Approval 3",
                            State = true
                        },
                        new
                        {
                            Id = 4,
                            Description = "Projet Approval Description",
                            Name = "Projet Approval 4",
                            State = true
                        },
                        new
                        {
                            Id = 5,
                            Description = "Projet Approval Description",
                            Name = "Projet Approval 5",
                            State = true
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Personal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Personals", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3432),
                            Description = "Admin Description",
                            Email = "admin@gmail.com",
                            Name = "Admin Name 1",
                            PhoneNumber = "(505)0000000",
                            Position = "Sistem Yöneticisi",
                            RegistrationNumber = "000",
                            State = true,
                            SurName = "Admin SurName 1",
                            UpdatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3446)
                        },
                        new
                        {
                            Id = new Guid("2f09bf40-1528-4980-900f-716914abfbf2"),
                            CreatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3454),
                            Description = "Personal 1 Description",
                            Email = "personal1@gmail.com",
                            Name = "Personel Name 1",
                            PhoneNumber = "(505)5050001",
                            Position = "Müdür",
                            RegistrationNumber = "123",
                            State = true,
                            SurName = "Personal SurName 1",
                            UpdatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3454)
                        },
                        new
                        {
                            Id = new Guid("81e922c4-4e7f-4925-a9fd-7e9ff3266382"),
                            CreatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3459),
                            Description = "Personal 2 Description",
                            Email = "personal2@gmail.com",
                            Name = "Personel Name 2",
                            PhoneNumber = "(505)5050002",
                            Position = "Müdür Yardımcısı",
                            RegistrationNumber = "124",
                            State = true,
                            SurName = "Personal SurName 2",
                            UpdatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3460)
                        },
                        new
                        {
                            Id = new Guid("11181a4e-ab99-42c5-805a-346e4c5f02bd"),
                            CreatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3465),
                            Description = "Personal 3 Description",
                            Email = "personal3@gmail.com",
                            Name = "Personel Name 3",
                            PhoneNumber = "(505)5050003",
                            Position = "Mühendis",
                            RegistrationNumber = "125",
                            State = true,
                            SurName = "Personal SurName 3",
                            UpdatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3465)
                        },
                        new
                        {
                            Id = new Guid("9fb768ef-4f17-471d-b2e8-626b1bc48e02"),
                            CreatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3469),
                            Description = "Personal 4 Description",
                            Email = "personal4@gmail.com",
                            Name = "Personel Name 4",
                            PhoneNumber = "(505)5050004",
                            Position = "Mühendis",
                            RegistrationNumber = "126",
                            State = true,
                            SurName = "Personal SurName 4",
                            UpdatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3470)
                        },
                        new
                        {
                            Id = new Guid("f7f14713-d762-4714-bbc9-5111e5294494"),
                            CreatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3474),
                            Description = "Personal 5 Description",
                            Email = "personal5@gmail.com",
                            Name = "Personel Name 5",
                            PhoneNumber = "(505)5050005",
                            Position = "Mühendis",
                            RegistrationNumber = "127",
                            State = true,
                            SurName = "Personal SurName 5",
                            UpdatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3474)
                        },
                        new
                        {
                            Id = new Guid("a2e31a5d-6069-4ec8-8ce2-c65cc96d43fc"),
                            CreatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3479),
                            Description = "Personal 6 Description",
                            Email = "personal6@gmail.com",
                            Name = "Personel Name 6",
                            PhoneNumber = "(505)5050006",
                            Position = "Mühendis",
                            RegistrationNumber = "128",
                            State = true,
                            SurName = "Personal SurName 6",
                            UpdatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3479)
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.PersonalTitle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedPersonalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedPersonalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedPersonalId");

                    b.HasIndex("UpdatedPersonalId");

                    b.ToTable("PersonalTitles", (string)null);
                });

            modelBuilder.Entity("NLayer.Core.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApprovalStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedPersonalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Purpose")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Unit")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedPersonalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalStatusId");

                    b.HasIndex("CreatedPersonalId");

                    b.HasIndex("UpdatedPersonalId");

                    b.ToTable("Projects", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c547e3f-1893-45ea-abe1-329379ebdaa5"),
                            ApprovalStatusId = 1,
                            CreatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3684),
                            CreatedPersonalId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Description = "Proje A Description",
                            Name = "Proje A",
                            Purpose = "Proje A Purpose",
                            State = true,
                            Unit = "Proje A Unit",
                            UpdatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3687),
                            UpdatedPersonalId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("e9567f76-4ed8-48b7-b30d-ebafaa8b909e"),
                            ApprovalStatusId = 1,
                            CreatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3762),
                            CreatedPersonalId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Description = "Proje B Description",
                            Name = "Proje B",
                            Purpose = "Proje B Purpose",
                            State = true,
                            Unit = "Proje B Unit",
                            UpdatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3765),
                            UpdatedPersonalId = new Guid("00000000-0000-0000-0000-000000000001")
                        },
                        new
                        {
                            Id = new Guid("841eccf0-b978-442c-a5cb-d0808bc7439b"),
                            ApprovalStatusId = 1,
                            CreatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3770),
                            CreatedPersonalId = new Guid("00000000-0000-0000-0000-000000000001"),
                            Description = "Proje C Description",
                            Name = "Proje C",
                            Purpose = "Proje C Purpose",
                            State = true,
                            Unit = "Proje C Unit",
                            UpdatedDate = new DateTime(2023, 5, 1, 19, 50, 54, 954, DateTimeKind.Local).AddTicks(3771),
                            UpdatedPersonalId = new Guid("00000000-0000-0000-0000-000000000001")
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.ProjectDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvailableTRL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvailableTRLDocumentation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedPersonalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GoalTRL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportantConsiderations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RiskPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("SubTechnologyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedPersonalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedPersonalId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UpdatedPersonalId");

                    b.ToTable("ProjectDetails", (string)null);
                });

            modelBuilder.Entity("NLayer.Core.Models.ProjectPersonal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedPersonalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonalTitleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedPersonalId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedPersonalId");

                    b.HasIndex("PersonalId");

                    b.HasIndex("PersonalTitleId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("UpdatedPersonalId");

                    b.ToTable("ProjectPersonals", (string)null);
                });

            modelBuilder.Entity("NLayer.Core.Models.PersonalTitle", b =>
                {
                    b.HasOne("NLayer.Core.Models.Personal", "CreatedPersonal")
                        .WithMany("PersonalTitlesCreated")
                        .HasForeignKey("CreatedPersonalId")
                        .IsRequired();

                    b.HasOne("NLayer.Core.Models.Personal", "UpdatedPersonal")
                        .WithMany("PersonalTitlesUpdated")
                        .HasForeignKey("UpdatedPersonalId")
                        .IsRequired();

                    b.Navigation("CreatedPersonal");

                    b.Navigation("UpdatedPersonal");
                });

            modelBuilder.Entity("NLayer.Core.Models.Project", b =>
                {
                    b.HasOne("NLayer.Core.Models.ApprovalStatus", "ApprovalStatus")
                        .WithMany()
                        .HasForeignKey("ApprovalStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLayer.Core.Models.Personal", "CreatedPersonal")
                        .WithMany("ProjectsCreated")
                        .HasForeignKey("CreatedPersonalId")
                        .IsRequired();

                    b.HasOne("NLayer.Core.Models.Personal", "UpdatedPersonal")
                        .WithMany("ProjectsUpdated")
                        .HasForeignKey("UpdatedPersonalId")
                        .IsRequired();

                    b.Navigation("ApprovalStatus");

                    b.Navigation("CreatedPersonal");

                    b.Navigation("UpdatedPersonal");
                });

            modelBuilder.Entity("NLayer.Core.Models.ProjectDetail", b =>
                {
                    b.HasOne("NLayer.Core.Models.Personal", "CreatedPersonal")
                        .WithMany("ProjectDetailsCreated")
                        .HasForeignKey("CreatedPersonalId")
                        .IsRequired();

                    b.HasOne("NLayer.Core.Models.Project", "Project")
                        .WithMany("ProjectDetails")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLayer.Core.Models.Personal", "UpdatedPersonal")
                        .WithMany("ProjectDetailsUpdated")
                        .HasForeignKey("UpdatedPersonalId")
                        .IsRequired();

                    b.Navigation("CreatedPersonal");

                    b.Navigation("Project");

                    b.Navigation("UpdatedPersonal");
                });

            modelBuilder.Entity("NLayer.Core.Models.ProjectPersonal", b =>
                {
                    b.HasOne("NLayer.Core.Models.Personal", "CreatedPersonal")
                        .WithMany("ProjectPersonalsCreated")
                        .HasForeignKey("CreatedPersonalId")
                        .IsRequired();

                    b.HasOne("NLayer.Core.Models.Personal", "Personal")
                        .WithMany()
                        .HasForeignKey("PersonalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLayer.Core.Models.PersonalTitle", "PersonalTitle")
                        .WithMany()
                        .HasForeignKey("PersonalTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLayer.Core.Models.Project", "Project")
                        .WithMany("ProjectPersonals")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NLayer.Core.Models.Personal", "UpdatedPersonal")
                        .WithMany("ProjectPersonalsUpdated")
                        .HasForeignKey("UpdatedPersonalId")
                        .IsRequired();

                    b.Navigation("CreatedPersonal");

                    b.Navigation("Personal");

                    b.Navigation("PersonalTitle");

                    b.Navigation("Project");

                    b.Navigation("UpdatedPersonal");
                });

            modelBuilder.Entity("NLayer.Core.Models.Personal", b =>
                {
                    b.Navigation("PersonalTitlesCreated");

                    b.Navigation("PersonalTitlesUpdated");

                    b.Navigation("ProjectDetailsCreated");

                    b.Navigation("ProjectDetailsUpdated");

                    b.Navigation("ProjectPersonalsCreated");

                    b.Navigation("ProjectPersonalsUpdated");

                    b.Navigation("ProjectsCreated");

                    b.Navigation("ProjectsUpdated");
                });

            modelBuilder.Entity("NLayer.Core.Models.Project", b =>
                {
                    b.Navigation("ProjectDetails");

                    b.Navigation("ProjectPersonals");
                });
#pragma warning restore 612, 618
        }
    }
}
